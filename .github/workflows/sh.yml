name: sh

on:
  push:
    branches:
      - master
  workflow_dispatch:
      
jobs:
  build:
    name: build openwrt firmware
    runs-on: ubuntu-20.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@main
        
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt-get update
          sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync

          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
      
      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone https://github.com/coolsnowwolf/lede openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          
      - name: Load custom feeds
        working-directory: ./openwrt
        run: |
           git clone https://github.com/KyleRicardo/MentoHUST-OpenWrt-ipk.git package/mentohust-custom
           git clone https://github.com/BoringCat/luci-app-mentohust.git package/luci-app-mentohust-custom
           git clone https://github.com/openwrt-dev/po2lmo.git
           pushd po2lmo
           make && sudo make install
           popd
           
      - name: Generate configuratin file
        env:
          CONFIG_FILE: '.config'
        working-directory: ./openwrt
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE ./.config
          make defconfig

      - name: Make download
        working-directory: ./openwrt
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
          
      - name: Compile firmware
        working-directory: ./openwrt
        env:
          FORCE_UNSAFE_CONFIGURE: 1
        run: |
          make -j$(nproc) V=s
          echo "::set-output name=status::success"
         
      - name: Prepare artifact
        working-directory: ./openwrt
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
          
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: openwrt/artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: openwrt/artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: openwrt/bin/targets/
